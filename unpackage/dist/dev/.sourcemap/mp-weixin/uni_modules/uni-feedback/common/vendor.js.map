{"version":3,"sources":["uni-app:///uni_modules/uni-feedback/js_sdk/validator/opendb-feedback.js"],"names":["validator","enumConverter","filterToWhere","filter","command","where","field","type","value","length","RegExp","selectValue","s","push","eq","or","gt","lt","and","gte","lte","e","startDate","Date","endDate"],"mappings":"0xCAGA,IAAMA,EAAY,CAChB,QAAW,CACT,MAAS,CACP,CACE,UAAY,GAEd,CACE,OAAU,WAGd,MAAS,aAEX,KAAQ,CACN,MAAS,CACP,CACE,OAAU,SAEZ,CACE,UAAa,QAEf,CACE,UAAa,IAGjB,MAAS,QAEX,QAAW,CACT,MAAS,CACP,CACE,OAAU,WAGd,MAAS,OAEX,OAAU,CACR,MAAS,CACP,CACE,OAAU,UAEZ,CACE,QAAW,uBAGf,MAAS,SAEZ,cAED,IAAMC,EAAgB,GAEtB,SAASC,EAAcC,EAAQC,GAC7B,IAAIC,EAAQ,GACZ,IAAK,IAAIC,KAASH,EAAQ,CACxB,MAAsBA,EAAOG,GAAvBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACZ,OAAQD,GACN,IAAK,SACkB,kBAAVC,GAAsBA,EAAMC,SACrCJ,EAAMC,GAAS,IAAII,OAAOF,IAE5B,MACF,IAAK,SACH,GAAIA,EAAMC,OAAQ,CAChB,IACmB,EADfE,EAAc,GAAE,IACNH,GAAK,IAAnB,IAAK,EAAL,qBAAqB,KAAZI,EAAC,QACRD,EAAYE,KAAKT,EAAQU,GAAGF,KAC7B,8BACDP,EAAMC,GAASF,EAAQW,GAAGJ,GAE5B,MACF,IAAK,QACH,GAAIH,EAAMC,OAAQ,CAChB,IAAIO,EAAKR,EAAM,GACXS,EAAKT,EAAM,GACfH,EAAMC,GAASF,EAAQc,IAAI,CAACd,EAAQe,IAAIH,GAAKZ,EAAQgB,IAAIH,KAE3D,MACF,IAAK,OACH,GAAIT,EAAMC,OAAQ,CAChB,oBAAaD,EAAK,GAAbI,EAAC,KAAES,EAAC,KACLC,EAAY,IAAIC,KAAKX,GACrBY,EAAU,IAAID,KAAKF,GACvBhB,EAAMC,GAASF,EAAQc,IAAI,CAACd,EAAQe,IAAIG,GAAYlB,EAAQgB,IAAII,KAElE,MACF,IAAK,YACH,GAAIhB,EAAMC,OAAQ,CAChB,oBAA2BD,EAAK,GAA3Bc,EAAS,KAAEE,EAAO,KACvBnB,EAAMC,GAASF,EAAQc,IAAI,CAACd,EAAQe,IAAIG,GAAYlB,EAAQgB,IAAII,KAElE,OAGN,OAAOnB,EA5Ce","file":"uni_modules/uni-feedback/common/vendor.js","sourcesContent":["// 表单校验规则由 schema2code 生成，不建议直接修改校验规则，而建议通过 schema2code 生成, 详情: https://uniapp.dcloud.net.cn/uniCloud/schema\n\n\nconst validator = {\n  \"content\": {\n    \"rules\": [\n      {\n        \"required\": true\n      },\n      {\n        \"format\": \"string\"\n      }\n    ],\n    \"label\": \"留言内容/回复内容\"\n  },\n  \"imgs\": {\n    \"rules\": [\n      {\n        \"format\": \"array\"\n      },\n      {\n        \"arrayType\": \"file\"\n      },\n      {\n        \"maxLength\": 6\n      }\n    ],\n    \"label\": \"图片列表\"\n  },\n  \"contact\": {\n    \"rules\": [\n      {\n        \"format\": \"string\"\n      }\n    ],\n    \"label\": \"联系人\"\n  },\n  \"mobile\": {\n    \"rules\": [\n      {\n        \"format\": \"string\"\n      },\n      {\n        \"pattern\": \"^\\\\+?[0-9-]{3,20}$\"\n      }\n    ],\n    \"label\": \"联系电话\"\n  }\n}\n\nconst enumConverter = {}\n\nfunction filterToWhere(filter, command) {\n  let where = {}\n  for (let field in filter) {\n    let { type, value } = filter[field]\n    switch (type) {\n      case \"search\":\n        if (typeof value === 'string' && value.length) {\n          where[field] = new RegExp(value)\n        }\n        break;\n      case \"select\":\n        if (value.length) {\n          let selectValue = []\n          for (let s of value) {\n            selectValue.push(command.eq(s))\n          }\n          where[field] = command.or(selectValue)\n        }\n        break;\n      case \"range\":\n        if (value.length) {\n          let gt = value[0]\n          let lt = value[1]\n          where[field] = command.and([command.gte(gt), command.lte(lt)])\n        }\n        break;\n      case \"date\":\n        if (value.length) {\n          let [s, e] = value\n          let startDate = new Date(s)\n          let endDate = new Date(e)\n          where[field] = command.and([command.gte(startDate), command.lte(endDate)])\n        }\n        break;\n      case \"timestamp\":\n        if (value.length) {\n          let [startDate, endDate] = value\n          where[field] = command.and([command.gte(startDate), command.lte(endDate)])\n        }\n        break;\n    }\n  }\n  return where\n}\n\nexport { validator, enumConverter, filterToWhere }\n"],"sourceRoot":""}